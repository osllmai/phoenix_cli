name: Build and Package C++ Project on macOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          # Update Homebrew and install required packages
          brew update
          brew install curl sqlite3 boost openssl cmake qt@6 qt-installer-framework

          # Set environment variables
          echo "Qt6_DIR=$(brew --prefix qt@6)/lib/cmake/Qt6" >> $GITHUB_ENV

          # Get the installation prefix of qt-installer-framework
          CPACK_IFW_ROOT=$(brew --prefix qt-installer-framework)
          echo "CPACK_IFW_ROOT=${CPACK_IFW_ROOT}" >> $GITHUB_ENV

          # Add the bin directory to PATH
          echo "${CPACK_IFW_ROOT}/bin" >> $GITHUB_PATH

      - name: Verify Installation
        shell: bash
        run: |
          echo "Current PATH: $PATH"
          echo "CPACK_IFW_ROOT: $CPACK_IFW_ROOT"
          ls -la "$CPACK_IFW_ROOT/bin/binarycreator"
          if [ -f "$CPACK_IFW_ROOT/bin/binarycreator" ]; then
            echo "binarycreator found"
          else
            echo "binarycreator not found at $CPACK_IFW_ROOT/bin/binarycreator"
            exit 1
          fi

      - name: Create Build Directory
        run: mkdir build

      - name: Configure with CMake
        env:
          OPENSSL_ROOT_DIR: $(brew --prefix openssl)
          CMAKE_PREFIX_PATH: $(brew --prefix qt@6)
          CPACK_IFW_ROOT: ${{ env.CPACK_IFW_ROOT }}
        run: |
          echo "CPACK_IFW_ROOT during CMake configure: $CPACK_IFW_ROOT"
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release \
                   -DCPACK_IFW_ROOT="$CPACK_IFW_ROOT" \
                   -DCPACK_GENERATOR="IFW"

      - name: Build with Make
        run: |
          cd build
          make -j$(sysctl -n hw.ncpu)

      - name: Verify CPack Configuration
        run: |
          cd build
          grep -i "CPACK_IFW_ROOT" CPackConfig.cmake

      - name: Package with CPack
        env:
          CPACK_IFW_ROOT: ${{ env.CPACK_IFW_ROOT }}
        run: |
          cd build
          echo "CPACK_IFW_ROOT during cpack: $CPACK_IFW_ROOT"
          cpack -V --config ./CPackConfig.cmake

      - name: Output IFW Error Log
        if: failure()
        run: |
          cat build/_CPack_Packages/Darwin/IFW/IFWOutput.log

      - name: Upload package artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: packaged-artifacts
          path: |
            build/*.dmg
            build/bin/phoenix.app
