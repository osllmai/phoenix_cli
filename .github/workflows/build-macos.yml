name: Build and Package C++ Project on macOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          # Update Homebrew and install required packages
          brew update
          brew install curl sqlite3 boost openssl cmake qt@6

          # Download Qt Installer Framework DMG
          QTIFW_VERSION=4.8.1
          curl -Lo qtifw.dmg https://download.qt.io/official_releases/qt-installer-framework/${QTIFW_VERSION}/QtInstallerFramework-macOS-x64-${QTIFW_VERSION}.dmg

          # Mount the DMG
          hdiutil attach qtifw.dmg

          # Create QtIFW directory
          sudo mkdir -p "/opt/QtIFW"
          
          # Copy the entire Contents directory
          sudo cp -R "/Volumes/QtInstallerFramework-macOS-x64-4.8.1/QtInstallerFramework-macOS-x64-4.8.1.app/Contents" "/opt/QtIFW/"
          
          # Set proper permissions
          sudo chmod -R 755 "/opt/QtIFW"
          
          # Unmount the DMG
          hdiutil detach "/Volumes/QtInstallerFramework-macOS-x64-4.8.1"

          # Create symlink to binarycreator
          sudo ln -s "/opt/QtIFW/Contents/MacOS/binarycreator" "/usr/local/bin/binarycreator"

          # Set environment variables
          echo "QTIFW_ROOT=/opt/QtIFW/Contents" >> $GITHUB_ENV
          echo "PATH=/opt/QtIFW/Contents/MacOS:$PATH" >> $GITHUB_ENV
          echo "Qt6_DIR=/opt/homebrew/opt/qt@6/lib/cmake/Qt6" >> $GITHUB_ENV

      - name: Verify Installation
        run: |
          echo "Current PATH: $PATH"
          echo "QTIFW_ROOT: $QTIFW_ROOT"
          echo "Checking QtIFW installation:"
          ls -la "/opt/QtIFW/Contents/MacOS"
          echo "Testing binarycreator:"
          which binarycreator
          binarycreator --version || echo "binarycreator version check failed"
          
          # Print all relevant directories
          echo "Contents of /opt/QtIFW:"
          ls -R /opt/QtIFW
          
          echo "Contents of /usr/local/bin:"
          ls -la /usr/local/bin/binary*

      - name: Create Build Directory
        run: mkdir build

      - name: Configure with CMake
        env:
          OPENSSL_ROOT_DIR: /opt/homebrew/opt/openssl
          CMAKE_PREFIX_PATH: /opt/homebrew/opt/qt@6
        run: |
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release \
                  -DCPACK_IFW_ROOT="/opt/QtIFW/Contents" \
                  -DCPACK_GENERATOR="IFW" \
                  -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: Build with Make
        run: |
          cd build
          make -j$(sysctl -n hw.ncpu) VERBOSE=1

      - name: Upload package artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: packaged-artifacts
          path: build/bin/phoenix.app