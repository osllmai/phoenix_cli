name: Build and Package C++ Project on macOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          # Update Homebrew and install required packages
          brew update
          brew install curl sqlite3 boost openssl cmake qt@6
          
          # Download Qt Installer Framework DMG
          QTIFW_VERSION=4.8.1
          curl -Lo qtifw.dmg https://download.qt.io/official_releases/qt-installer-framework/${QTIFW_VERSION}/QtInstallerFramework-macOS-x64-${QTIFW_VERSION}.dmg
          
          # Mount the DMG
          hdiutil attach qtifw.dmg
          
          # Copy Qt Installer Framework.app to a directory within the runner's home directory
          mkdir -p $HOME/QtIFW
          cp -R "/Volumes/Qt Installer Framework/Qt Installer Framework.app" "$HOME/QtIFW/"
          
          # Unmount the DMG
          hdiutil detach "/Volumes/Qt Installer Framework"
          
          # Add Qt Installer Framework binaries to PATH
          echo "PATH=\"$HOME/QtIFW/Qt Installer Framework.app/Contents/bin:\$PATH\"" >> $GITHUB_ENV
          echo 'Qt6_DIR="/usr/local/opt/qt@6/lib/cmake/Qt6"' >> $GITHUB_ENV

      - name: Verify binarycreator installation
        run: |
          which binarycreator
          binarycreator --version

      - name: Create Build Directory
        run: mkdir build

      - name: Configure with CMake
        env:
          OPENSSL_ROOT_DIR: /usr/local/opt/openssl
          CMAKE_PREFIX_PATH: /usr/local/opt/qt@6
        run: |
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release

      - name: Build with Make
        run: |
          cd build
          make -j$(sysctl -n hw.ncpu)

      - name: Package with CPack
        run: |
          cd build
          cpack

      - name: Upload package artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: packaged-artifacts
          path: build/*.dmg
